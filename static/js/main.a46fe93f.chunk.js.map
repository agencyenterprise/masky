{"version":3,"sources":["assets/corona.svg","assets/health.svg","assets/logo.svg","components/About.tsx","components/GlobalStyle.tsx","components/CustomThemeProvider.tsx","components/ArObjects.tsx","components/AudioIcon.tsx","lib/Detection.ts","components/Footer.tsx","lib/message.ts","components/PredictionWrapper.tsx","lib/useCanPlayAudio.ts","lib/useDetection.ts","lib/useWebcam.ts","components/Detector.tsx","lib/useDetectionModel.ts","lib/useAudio.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","year","Date","getFullYear","About","id","p","backgroundColor","color","variant","mb","mt","href","role","aria-label","justifyContent","alignItems","GlobalStyle","styles","css","theme","colors","text","background","primary","secondary","muted","gray","noMask","yesMask","mixedMasks","highlight","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","space","sizes","avatar","radii","default","circle","shadows","card","fontFamily","lineHeight","fontWeight","display","fontSize","caps","textTransform","letterSpacing","variants","width","height","borderRadius","bg","boxShadow","link","nav","textDecoration","buttons","outline","root","CustomThemeProvider","children","reducer","state","action","type","objects","filter","object","x","video","y","slice","map","dx","payload","dy","newArObjects","detections","newArObject","boxes","Error","ArObjects","videoRef","useReducer","dispatch","useDetections","useTick","useGenerateArObjects","useVideo","url","key","useEffect","handle","requestAnimationFrame","nextFrame","time","cancelAnimationFrame","setInterval","clearInterval","current","videoWidth","videoHeight","label","box","top","left","angle","Math","PI","random","cos","sin","uniqueId","corona","health","AudioIcon","audio","onChange","icon","EmptyButton","onClick","styled","button","DetectionColor","loading","face","mask","both","none","statusFromCounts","masks","faces","defaultDetections","status","Footer","px","py","flex","textAlign","webcamStatusMessage","waiting","connected","failed","detectionMessage","PredictionWrapper","flexDirection","sx","position","initialState","storedValue","window","localStorage","getItem","warmUp","model","dummyImage","tf","detect","defaultVideoConstraints","facingMode","modelUrl","process","Detector","detectionModel","useState","setModel","automl","then","useDetectionModel","videoConstraints","useRef","setStatus","navigator","mediaDevices","getUserMedia","stream","srcObject","console","error","catch","useWebcam","detectionInterval","setDetections","videoReady","setVideoReady","onVideoReady","useCallback","useDetection","started","setStarted","detectedObjects","detection","score","length","calculateDetections","canPlay","setCanPlay","setItem","toString","useCanPlayAudio","src","playing","setAudio","Audio","play","pause","currentTime","useAudio","mr","logo","VideoContainer","Video","autoPlay","playsInline","hide","ref","onLoadedData","SvgContainer","viewBox","disabled","paddingY","webcamStatus","getMessage","div","svg","ButtonContainer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a46fe93f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corona.95f04a28.svg\";","module.exports = __webpack_public_path__ + \"static/media/health.9599ae06.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0a98c8a5.svg\";","import React, { FunctionComponent } from \"react\";\nimport { Heading, Text, Box, Flex, Link } from \"rebass\";\n\nconst year = new Date().getFullYear();\n\nexport const About: FunctionComponent = () => {\n  return (\n    <>\n      <Box id=\"about\" p={4} backgroundColor=\"primary\" color=\"secondary\">\n        <Heading variant=\"display\" mb={3}>\n          Doctor Masky is here to remind you, just put on a mask.\n        </Heading>\n\n        <Text variant=\"body\">\n          Like everyone else these days, our neural network is trained to\n          recognize faces in masks, and to watch out for faces without them.\n        </Text>\n\n        <Text variant=\"body\">\n          So take your mask off (when you're inside please!) and let the Doctor\n          show you just <em>really</em> going on.\n        </Text>\n\n        <Heading variant=\"display\" mt={4}>\n          FAQ\n        </Heading>\n\n        <Heading variant=\"heading\" mt={3} mb={2}>\n          Are you stealing pictures of my face?!\n        </Heading>\n\n        <Text variant=\"body\">\n          We promise we're not. Your video stream never leaves your device, and\n          all the mask detecting is happing right there on your machine. Doctor\n          Masky is always with you.\n        </Text>\n\n        <Heading variant=\"heading\" mt={3} mb={2}>\n          How does it work?\n        </Heading>\n\n        <Text variant=\"body\">\n          If you want to get technical, we used{\" \"}\n          <Link href=\"https://cloud.google.com/automl\" color=\"secondary\">\n            Google AutoML Vision\n          </Link>{\" \"}\n          to train the model,{\" \"}\n          <Link href=\"https://www.tensorflow.org/js\" color=\"secondary\">\n            TensorFlow.js\n          </Link>{\" \"}\n          to run the inferences, and React to put it all together. You can read\n          more in{\" \"}\n          <Link href=\"\" color=\"secondary\">\n            this blog post\n          </Link>{\" \"}\n          (coming soon).\n        </Text>\n\n        <Text variant=\"body\">\n          If you don't want to get technical, then it's magic{\" \"}\n          <span role=\"img\" aria-label=\"sparkles\">\n            ✨\n          </span>\n        </Text>\n\n        <Heading variant=\"heading\" mt={3} mb={2}>\n          This is taking a while to load.\n        </Heading>\n\n        <Text variant=\"body\">\n          Yeah it takes a few seconds to get going. Think of it like visiting\n          any other doctor, you're going to spend some time waiting.\n        </Text>\n\n        <Heading variant=\"heading\" mt={3} mb={2}>\n          Are viruses really shooting out of my mouth whenever I take my mask\n          off?\n        </Heading>\n\n        <Text variant=\"body\">Yes.</Text>\n\n        <Heading variant=\"heading\" mt={3} mb={2}>\n          Why did you make this?\n        </Heading>\n\n        <Text variant=\"body\">\n          We're AE Studio, and we care about increasing human agency. We know\n          you want to help protect people, and we think this is a fun way to\n          remind yourself to do it.\n        </Text>\n\n        <Text variant=\"body\">\n          Also, if you've got a human-agency increasing data science project,\n          we'd love to{\" \"}\n          <Link href=\"https://ae.studio\" color=\"secondary\">\n            help you build it!\n          </Link>\n        </Text>\n      </Box>\n\n      <Flex\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        backgroundColor=\"background\"\n        p={4}\n        color=\"primary\"\n      >\n        <Text variant=\"body\">© {year} AE Studio, all rights reserved</Text>\n\n        <Link href=\"mailto:info@ae.studio\">\n          <Text variant=\"body\">Contact</Text>\n        </Link>\n      </Flex>\n    </>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, Global, css } from \"@emotion/core\";\n\nexport const GlobalStyle = () => {\n  return (\n    <Global\n      styles={css`\n        html,\n        body,\n        #root {\n          height: 100%;\n        }\n\n        body {\n          margin: 0;\n        }\n      `}\n    />\n  );\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { FunctionComponent } from \"react\";\nimport { ThemeProvider } from \"emotion-theming\";\n\nconst theme = {\n  colors: {\n    text: \"#000\",\n    background: \"#032B43\",\n    primary: \"#f9f9f9\",\n    secondary: \"#032B43\",\n    muted: \"#f6f6f9\",\n    gray: \"#dddddf\",\n    noMask: \"#D00000\",\n    yesMask: \"#136F63\",\n    mixedMasks: \"#ffba08\",\n    highlight: \"hsla(205, 100%, 40%, 0.125)\",\n  },\n  fonts: {\n    body: \"system-ui, sans-serif\",\n    heading: \"system-ui, sans-serif\",\n    monospace: \"Menlo, monospace\",\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.25,\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  sizes: {\n    avatar: 48,\n  },\n  radii: {\n    default: 4,\n    circle: 99999,\n  },\n  shadows: {\n    card: \"0 0 4px rgba(0, 0, 0, .125)\",\n  },\n  // rebass variants\n  text: {\n    heading: {\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n    },\n    display: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      fontSize: [5, 6, 7],\n    },\n    body: {\n      fontFamily: \"body\",\n      fontWeight: \"body\",\n      lineHeight: \"body\",\n      fontSize: [1, 2, 3],\n    },\n    caps: {\n      textTransform: \"uppercase\",\n      letterSpacing: \"0.1em\",\n    },\n  },\n  variants: {\n    avatar: {\n      width: \"avatar\",\n      height: \"avatar\",\n      borderRadius: \"circle\",\n    },\n    card: {\n      p: 2,\n      bg: \"background\",\n      boxShadow: \"card\",\n    },\n    link: {\n      color: \"primary\",\n    },\n    nav: {\n      fontSize: 1,\n      fontWeight: \"bold\",\n      display: \"inline-block\",\n      p: 2,\n      color: \"inherit\",\n      textDecoration: \"none\",\n      \":hover,:focus,.active\": {\n        color: \"primary\",\n      },\n    },\n  },\n  buttons: {\n    primary: {\n      fontSize: 2,\n      fontWeight: \"bold\",\n      color: \"background\",\n      bg: \"primary\",\n      borderRadius: \"default\",\n    },\n    outline: {\n      variant: \"buttons.primary\",\n      color: \"primary\",\n      bg: \"transparent\",\n      boxShadow: \"inset 0 0 2px\",\n    },\n    secondary: {\n      variant: \"buttons.primary\",\n      color: \"background\",\n      bg: \"secondary\",\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      fontWeight: \"body\",\n      lineHeight: \"body\",\n    },\n  },\n};\n\nexport const CustomThemeProvider: FunctionComponent = ({ children }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n","import React, {\n  FunctionComponent,\n  Reducer,\n  useEffect,\n  useReducer,\n} from \"react\";\nimport * as automl from \"@tensorflow/tfjs-automl\";\n\nimport { Detections } from \"../lib/Detection\";\nimport corona from \"../assets/corona.svg\";\nimport health from \"../assets/health.svg\";\n\ninterface ArObject {\n  id: number;\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  url: string;\n}\n\nexport interface ArObjectsProps {\n  detections: Detections;\n  videoRef: React.MutableRefObject<HTMLVideoElement | null>;\n}\n\ninterface ArObjectsState {\n  objects: ArObject[];\n  detections: automl.PredictedObject[];\n  video: { height: number; width: number };\n}\n\ninterface VideoDimensions {\n  width: number;\n  height: number;\n}\n\ntype Action<Type extends string, Payload> = {\n  type: Type;\n  payload: Payload;\n};\n\ntype EmptyAction<Type extends string> = {\n  type: Type;\n};\n\ntype ArObjectsAction =\n  | Action<\"tick\", number>\n  | Action<\"detections\", Detections>\n  | Action<\"video\", VideoDimensions>\n  | EmptyAction<\"generate\">;\n\nconst SPEED = 40;\nconst SPAWN_FREQUENCY = 1000 * 0.5;\nconst MAX_AR_OBJECTS = 20;\n\nconst reducer: Reducer<ArObjectsState, ArObjectsAction> = (state, action) => {\n  switch (action.type) {\n    case \"tick\": {\n      const objects = state.objects\n        .filter(\n          (object) =>\n            object.x > 0 &&\n            object.x < state.video.width &&\n            object.y > 0 &&\n            object.y < state.video.height\n        )\n        .slice(0, MAX_AR_OBJECTS)\n        .map((object) => ({\n          ...object,\n          x: object.x + object.dx * (1000 / action.payload),\n          y: object.y + object.dy * (1000 / action.payload),\n        }));\n      return { ...state, objects };\n    }\n    case \"video\": {\n      return { ...state, video: action.payload };\n    }\n    case \"generate\": {\n      const newArObjects = state.detections.map(newArObject);\n\n      return {\n        ...state,\n        objects: [...newArObjects, ...state.objects],\n      };\n    }\n    case \"detections\": {\n      return { ...state, detections: action.payload.boxes };\n    }\n    default:\n      throw new Error();\n  }\n};\n\nconst initialState = (): ArObjectsState => ({\n  objects: [],\n  detections: [],\n  video: {\n    width: 0,\n    height: 0,\n  },\n});\n\nexport const ArObjects: FunctionComponent<ArObjectsProps> = ({\n  detections,\n  videoRef,\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState());\n\n  useDetections(detections, dispatch);\n  useTick(dispatch);\n  useGenerateArObjects(dispatch);\n  useVideo(videoRef, dispatch);\n\n  const { objects } = state;\n\n  return (\n    <>\n      {objects.map(({ id, x, y, url }) => (\n        <image key={id} x={x} y={y} href={url} height={20} width={20} />\n      ))}\n    </>\n  );\n};\n\nconst useTick = (dispatch: React.Dispatch<ArObjectsAction>): void => {\n  useEffect(() => {\n    const nextFrame = (time: number) => {\n      dispatch({ type: \"tick\", payload: time });\n      requestAnimationFrame(nextFrame);\n    };\n\n    const handle = requestAnimationFrame(nextFrame);\n\n    return () => cancelAnimationFrame(handle);\n  }, [dispatch]);\n};\n\nconst useGenerateArObjects = (dispatch: React.Dispatch<ArObjectsAction>) => {\n  useEffect(() => {\n    const handle = setInterval(() => {\n      dispatch({ type: \"generate\" });\n    }, SPAWN_FREQUENCY);\n\n    return () => clearInterval(handle);\n  }, [dispatch]);\n};\n\nconst useDetections = (\n  detections: Detections,\n  dispatch: React.Dispatch<ArObjectsAction>\n): void => {\n  useEffect(() => {\n    dispatch({ type: \"detections\", payload: detections });\n  }, [detections, dispatch]);\n};\n\nconst useVideo = (\n  videoRef: React.MutableRefObject<HTMLVideoElement | null>,\n  dispatch: React.Dispatch<ArObjectsAction>\n) => {\n  const width = videoRef.current?.videoWidth || 0;\n  const height = videoRef.current?.videoHeight || 0;\n\n  useEffect(() => {\n    dispatch({ type: \"video\", payload: { width, height } });\n  }, [width, height, dispatch]);\n};\n\nconst newArObject = ({\n  label,\n  box: { top, left, height, width },\n}: automl.PredictedObject): ArObject => {\n  if (label === \"face\") {\n    const angle = 2 * Math.PI * Math.random();\n    const dx = SPEED * Math.cos(angle);\n    const dy = SPEED * Math.sin(angle);\n\n    return {\n      id: uniqueId(),\n      url: corona,\n      x: left + width / 2,\n      y: top + height * (2 / 3),\n      dx,\n      dy,\n    };\n  } else {\n    return {\n      id: uniqueId(),\n      url: health,\n      x: left + width * Math.random(),\n      y: top - 10,\n      dx: 0,\n      dy: -SPEED,\n    };\n  }\n};\n\nexport const negativeOneToPositiveOne = () => {\n  const positive = Math.random() > 0.5;\n  return Math.random() * (positive ? 1 : -1);\n};\n\nlet id = 0;\nconst uniqueId = () => id++;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { FunctionComponent } from \"react\";\nimport { Text } from \"rebass\";\n\nexport interface AudioIconProps {\n  audio: boolean;\n  onChange: (audio: boolean) => void;\n}\n\nexport const AudioIcon: FunctionComponent<AudioIconProps> = ({\n  audio,\n  onChange,\n}) => {\n  const label = audio ? \"audio on\" : \"muted\";\n  const icon = audio ? \"🔊\" : \"🔇\";\n  return (\n    <EmptyButton onClick={() => onChange(!audio)}>\n      <Text variant=\"body\">\n        <span role=\"img\" aria-label={label}>\n          {icon}\n        </span>\n      </Text>\n    </EmptyButton>\n  );\n};\n\nconst EmptyButton = styled.button`\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  background: transparent;\n  border: none;\n`;\n","import * as automl from \"@tensorflow/tfjs-automl\";\n\nexport const DETECTION_THRESHOLD = 0.65;\n\nexport interface Detections {\n  masks: number;\n  faces: number;\n  status: DetectionStatus;\n  boxes: automl.PredictedObject[];\n}\n\nexport type DetectionStatus = \"loading\" | \"none\" | \"face\" | \"mask\" | \"both\";\n\nexport const DetectionColor: Record<DetectionStatus, string> = {\n  loading: \"secondary\",\n  face: \"noMask\",\n  mask: \"yesMask\",\n  both: \"mixedMasks\",\n  none: \"secondary\",\n};\n\nexport const calculateDetections = (\n  detections: automl.PredictedObject[] | null\n): Detections => {\n  if (!detections) {\n    return defaultDetections;\n  }\n\n  const boxes = detections.filter(\n    (detection) => detection.score > DETECTION_THRESHOLD\n  );\n  const masks = boxes.filter((detection) => detection.label === \"mask\").length;\n  const faces = boxes.filter((detection) => detection.label === \"face\").length;\n\n  const status = statusFromCounts(masks, faces);\n\n  return { masks, faces, status, boxes };\n};\n\nconst statusFromCounts = (masks: number, faces: number): DetectionStatus => {\n  if (masks > 0 && faces > 0) {\n    return \"both\";\n  }\n  if (masks > 0) {\n    return \"mask\";\n  }\n  if (faces > 0) {\n    return \"face\";\n  }\n  return \"none\";\n};\n\nexport const defaultDetections: Detections = {\n  status: \"loading\",\n  masks: 0,\n  faces: 0,\n  boxes: [],\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { FunctionComponent } from \"react\";\nimport { Flex, Box, Text, Link } from \"rebass\";\n\nexport const Footer: FunctionComponent = () => {\n  return (\n    <Flex justifyContent=\"space-between\" px={4} py={2}>\n      <Box flex=\"1 0 0\" />\n      <Box>\n        <Text color=\"primary\" textAlign=\"center\" variant=\"body\">\n          Made with{\" \"}\n          <span role=\"img\" aria-label=\"love\">\n            ❤️\n          </span>\n          &nbsp; by &nbsp;\n          <Link href=\"https://ae.studio\">AE Studio</Link>\n        </Text>\n      </Box>\n      <Box flex=\"1 0 0\">\n        <Link href=\"#about\">\n          <Text color=\"primary\" variant=\"body\" textAlign=\"right\">\n            About\n          </Text>\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n","import { WebcamStatus } from \"./useWebcam\";\nimport { Detections, DetectionStatus } from \"./Detection\";\n\nexport const webcamStatusMessage: Record<WebcamStatus, string> = {\n  waiting: \"Waiting for camera...\",\n  connected: \"Loading model...\",\n  failed: \"Couldn't connect to camera.\",\n};\n\nexport const detectionMessage: Record<DetectionStatus, string> = {\n  loading: \"Loading model...\",\n  none: \"I'm not sure. Try getting closer to the screen.\",\n  both: \"Ask your friends to put on a mask!\",\n  face: \"Don't forget your mask!\",\n  mask: \"Thanks for wearing a mask!\",\n};\n\nexport const getMessage = (\n  detections: Detections,\n  webcamStatus: WebcamStatus,\n  started: boolean\n): string => {\n  if (detections.status === \"loading\") {\n    return webcamStatusMessage[webcamStatus];\n  } else if (!started) {\n    return \"Ready to start\";\n  } else {\n    return detectionMessage[detections.status];\n  }\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Flex } from \"rebass\";\nimport { FunctionComponent } from \"react\";\n\nimport { Detections, DetectionColor } from \"../lib/Detection\";\n\nexport interface PredictionWrapperProps {\n  detections: Detections;\n}\n\nexport const PredictionWrapper: FunctionComponent<PredictionWrapperProps> = ({\n  detections,\n  children,\n}) => {\n  return (\n    <Flex\n      bg={DetectionColor[detections.status]}\n      width=\"100%\"\n      height=\"100%\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      sx={{\n        position: \"relative\",\n      }}\n    >\n      {children}\n    </Flex>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useCanPlayAudio = (): [boolean, (canPlay: boolean) => void] => {\n  const [canPlay, setCanPlay] = useState(initialState);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"canPlay\", canPlay.toString());\n  }, [canPlay]);\n\n  return [canPlay, setCanPlay];\n};\n\nconst initialState = () => {\n  const storedValue = window.localStorage.getItem(\"canPlay\");\n\n  if (!storedValue) return true;\n  return storedValue === \"true\" ? true : false;\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as automl from \"@tensorflow/tfjs-automl\";\n\nexport const DEFAULT_DETECTIONS_TIME = 1000;\n\nexport type PredictedObjects = automl.PredictedObject[] | null;\n\nexport const useDetection = (\n  model: automl.ObjectDetectionModel | null,\n  videoRef: React.MutableRefObject<HTMLVideoElement | null>,\n  detectionInterval = DEFAULT_DETECTIONS_TIME\n): [PredictedObjects, () => void] => {\n  const [detections, setDetections] = useState<PredictedObjects>(null);\n  const [videoReady, setVideoReady] = useState(false);\n\n  const onVideoReady = useCallback(() => setVideoReady(true), [setVideoReady]);\n\n  // Warm up model while the camera is connecting.\n  useEffect(() => {\n    if (model) {\n      warmUp(model);\n    }\n  }, [model]);\n\n  // Start running detections after webcam is connected.\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!videoReady || !model || !video) return;\n\n    // First run\n    model.detect(video).then(setDetections);\n\n    // Schedule detections.\n    const handle = setInterval(\n      () => model.detect(video).then(setDetections),\n      detectionInterval\n    );\n\n    return () => {\n      clearInterval(handle);\n    };\n  }, [videoReady, detectionInterval, model, videoRef, setDetections]);\n\n  return [detections, onVideoReady];\n};\n\nconst warmUp = (model: automl.ObjectDetectionModel) => {\n  const dummyImage = tf.zeros<tf.Rank.R3>([3, 3, 3]);\n  model.detect(dummyImage);\n};\n","import { useRef, useEffect, useState } from \"react\";\n\nexport type WebcamStatus = \"waiting\" | \"connected\" | \"failed\";\n\nconst defaultVideoConstraints = { facingMode: \"user\" };\n\nexport const useWebcam = (\n  videoConstraints: MediaTrackConstraints = defaultVideoConstraints\n): [React.MutableRefObject<HTMLVideoElement | null>, WebcamStatus] => {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const [status, setStatus] = useState<WebcamStatus>(\"waiting\");\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: videoConstraints })\n      .then((stream) => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          setStatus(\"connected\");\n        } else {\n          console.error(\"Webcam connected before video was ready.\");\n          setStatus(\"failed\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setStatus(\"failed\");\n      });\n  }, [videoConstraints]);\n\n  return [videoRef, status];\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Box, Text, Flex, Image, Button } from \"rebass\";\nimport { FunctionComponent, useState } from \"react\";\n\nimport { ArObjects } from \"./ArObjects\";\nimport { AudioIcon } from \"./AudioIcon\";\nimport { calculateDetections } from \"../lib/Detection\";\nimport { Footer } from \"./Footer\";\nimport { getMessage } from \"../lib/message\";\nimport { PredictionWrapper } from \"./PredictionWrapper\";\nimport { useAudio } from \"../lib/useAudio\";\nimport { useCanPlayAudio } from \"../lib/useCanPlayAudio\";\nimport { useDetection } from \"../lib/useDetection\";\nimport { useDetectionModel } from \"../lib/useDetectionModel\";\nimport { useWebcam } from \"../lib/useWebcam\";\nimport logo from \"../assets/logo.svg\";\n\nconst modelUrl = `${process.env.REACT_APP_MODEL_URL}/model.json`;\n\nexport const Detector: FunctionComponent = () => {\n  const detectionModel = useDetectionModel(modelUrl);\n  const [videoRef, status] = useWebcam();\n  const [detections, onVideoReady] = useDetection(\n    detectionModel,\n    videoRef,\n    500\n  );\n\n  const [started, setStarted] = useState(false);\n\n  const detectedObjects = calculateDetections(detections);\n\n  const [canPlay, setCanPlay] = useCanPlayAudio();\n\n  useAudio({\n    src: \"assets/coronavirus.mp3\",\n    playing: canPlay && detectedObjects.status === \"face\",\n    started,\n  });\n\n  return (\n    <PredictionWrapper detections={detectedObjects}>\n      <AudioIcon audio={canPlay} onChange={setCanPlay} />\n\n      <Flex justifyContent=\"center\" alignItems=\"center\" p={2}>\n        <Image height={[40, 60, 80]} mr={3} src={logo} />\n        <Text color=\"primary\" textAlign=\"center\" variant=\"display\">\n          Doctor Masky\n        </Text>\n      </Flex>\n\n      <VideoContainer>\n        <Video\n          autoPlay\n          muted\n          playsInline\n          hide={!detections || !started}\n          ref={videoRef}\n          onLoadedData={onVideoReady}\n        />\n\n        {videoRef.current && (\n          <SvgContainer\n            viewBox={`0 0 ${videoRef.current?.videoWidth} ${videoRef.current?.videoHeight}`}\n          >\n            <ArObjects detections={detectedObjects} videoRef={videoRef} />\n          </SvgContainer>\n        )}\n\n        {!started && (\n          <ButtonContainer>\n            <Button\n              variant=\"primary\"\n              onClick={() => setStarted(true)}\n              disabled={!detections}\n            >\n              {detections ? \"Start\" : \"Loading...\"}\n            </Button>\n          </ButtonContainer>\n        )}\n      </VideoContainer>\n\n      <Box>\n        <Text\n          fontSize={[3, 4, 5]}\n          color=\"primary\"\n          textAlign=\"center\"\n          variant=\"heading\"\n          paddingY={3}\n        >\n          {getMessage(detectedObjects, status, started)}\n        </Text>\n\n        <Footer />\n      </Box>\n    </PredictionWrapper>\n  );\n};\n\nconst VideoContainer = styled.div`\n  position: relative;\n  flex-grow: 1;\n  flex-shrink: 1;\n`;\n\nconst Video = styled.video<{ hide: boolean }>`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transform: scaleX(-1);\n  flex-grow: 1;\n  display: ${({ hide }) => (hide ? \"none\" : \"block\")};\n`;\n\nconst SvgContainer = styled.svg`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: scaleX(-1);\n`;\n\nconst ButtonContainer: FunctionComponent = ({ children }) => {\n  return (\n    <Flex\n      width=\"100%\"\n      height=\"100%\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        top: \"0\",\n        left: \"0\",\n        position: \"absolute\",\n      }}\n    >\n      {children}\n    </Flex>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport * as automl from \"@tensorflow/tfjs-automl\";\n\nexport const useDetectionModel = (\n  modelUrl: string\n): automl.ObjectDetectionModel | null => {\n  const [model, setModel] = useState<automl.ObjectDetectionModel | null>(null);\n\n  useEffect(() => {\n    automl.loadObjectDetection(modelUrl).then(setModel);\n  }, [modelUrl]);\n\n  return model;\n};\n","import { useEffect, useState } from \"react\";\n\nexport interface UseAudioProps {\n  src: string;\n  playing: boolean;\n  started: boolean;\n}\n\nexport const useAudio = ({ src, playing, started }: UseAudioProps) => {\n  const [audio, setAudio] = useState<HTMLAudioElement | null>(null);\n\n  useEffect(() => {\n    if (started) {\n      setAudio(new Audio(src));\n    }\n  }, [started, src]);\n\n  useEffect(() => {\n    if (!audio) return;\n\n    if (playing) {\n      audio.play();\n    } else {\n      audio.pause();\n      audio.currentTime = 0;\n    }\n  }, [audio, playing]);\n};\n","import React from \"react\";\n\nimport { About } from \"./components/About\";\nimport { GlobalStyle } from \"./components/GlobalStyle\";\nimport { CustomThemeProvider } from \"./components/CustomThemeProvider\";\nimport { Detector } from \"./components/Detector\";\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    <CustomThemeProvider>\n      <GlobalStyle />\n      <Detector />\n      <About />\n    </CustomThemeProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}